// Autogenerated by TargetFeatureEmitter.cpp


#ifdef GET_SUBTARGETFEATURES_ENUM
#undef GET_SUBTARGETFEATURES_ENUM

namespace llvm {
namespace PPC {
enum {
  AIXOS = 0,
  DeprecatedDST = 1,
  Directive32 = 2,
  Directive64 = 3,
  Directive440 = 4,
  Directive601 = 5,
  Directive602 = 6,
  Directive603 = 7,
  Directive604 = 8,
  Directive620 = 9,
  Directive750 = 10,
  Directive970 = 11,
  Directive7400 = 12,
  DirectiveA2 = 13,
  DirectiveE500 = 14,
  DirectiveE500mc = 15,
  DirectiveE5500 = 16,
  DirectivePwr3 = 17,
  DirectivePwr4 = 18,
  DirectivePwr5 = 19,
  DirectivePwr5x = 20,
  DirectivePwr6 = 21,
  DirectivePwr6x = 22,
  DirectivePwr7 = 23,
  DirectivePwr8 = 24,
  DirectivePwr9 = 25,
  DirectivePwr10 = 26,
  DirectivePwr11 = 27,
  DirectivePwrFuture = 28,
  Feature64Bit = 29,
  Feature64BitRegs = 30,
  FeatureAIXLocalDynamicTLS = 31,
  FeatureAIXLocalExecTLS = 32,
  FeatureAIXSharedLibTLSModelOpt = 33,
  FeatureAddLogicalFusion = 34,
  FeatureAddiLoadFusion = 35,
  FeatureAddisLoadFusion = 36,
  FeatureAltivec = 37,
  FeatureArithAddFusion = 38,
  FeatureBPERMD = 39,
  FeatureBack2BackFusion = 40,
  FeatureBookE = 41,
  FeatureCMPB = 42,
  FeatureCRBits = 43,
  FeatureCompareFusion = 44,
  FeatureDirectMove = 45,
  FeatureE500 = 46,
  FeatureEFPU2 = 47,
  FeatureExtDiv = 48,
  FeatureFCPSGN = 49,
  FeatureFPCVT = 50,
  FeatureFPRND = 51,
  FeatureFPU = 52,
  FeatureFRE = 53,
  FeatureFRES = 54,
  FeatureFRSQRTE = 55,
  FeatureFRSQRTES = 56,
  FeatureFSqrt = 57,
  FeatureFastMFLR = 58,
  FeatureFloat128 = 59,
  FeatureFusion = 60,
  FeatureHTM = 61,
  FeatureHardFloat = 62,
  FeatureICBT = 63,
  FeatureISA2_06 = 64,
  FeatureISA2_07 = 65,
  FeatureISA3_0 = 66,
  FeatureISA3_1 = 67,
  FeatureISAFuture = 68,
  FeatureISEL = 69,
  FeatureInvariantFunctionDescriptors = 70,
  FeatureLDBRX = 71,
  FeatureLFIWAX = 72,
  FeatureLogicalAddFusion = 73,
  FeatureLogicalFusion = 74,
  FeatureLongCall = 75,
  FeatureMFOCRF = 76,
  FeatureMFTB = 77,
  FeatureMMA = 78,
  FeatureMSYNC = 79,
  FeatureModernAIXAs = 80,
  FeatureP8Altivec = 81,
  FeatureP8Crypto = 82,
  FeatureP8Vector = 83,
  FeatureP9Altivec = 84,
  FeatureP9Vector = 85,
  FeatureP10Vector = 86,
  FeaturePCRelativeMemops = 87,
  FeaturePOPCNTD = 88,
  FeaturePPC4xx = 89,
  FeaturePPC6xx = 90,
  FeaturePPCPostRASched = 91,
  FeaturePPCPreRASched = 92,
  FeaturePairedVectorMemops = 93,
  FeaturePartwordAtomic = 94,
  FeaturePredictableSelectIsExpensive = 95,
  FeaturePrefixInstrs = 96,
  FeaturePrivileged = 97,
  FeatureQuadwordAtomic = 98,
  FeatureROPProtect = 99,
  FeatureRecipPrec = 100,
  FeatureSPE = 101,
  FeatureSTFIWX = 102,
  FeatureSecurePlt = 103,
  FeatureSha3Fusion = 104,
  FeatureSlowPOPCNTD = 105,
  FeatureStoreFusion = 106,
  FeatureTwoConstNR = 107,
  FeatureUnalignedFloats = 108,
  FeatureVSX = 109,
  FeatureVectorsUseTwoUnits = 110,
  FeatureWideImmFusion = 111,
  FeatureZeroMoveFusion = 112,
  NumSubtargetFeatures = 113
};
} // end namespace PPC
} // end namespace llvm

#endif // GET_SUBTARGETFEATURES_ENUM


#ifdef GET_SUBTARGETFEATURES_KV
#undef GET_SUBTARGETFEATURES_KV

namespace llvm {
// Sorted (by key) array of values for CPU features.
extern const llvm::BasicSubtargetFeatureKV BasicPPCFeatureKV[] = {
  { "64bit", PPC::Feature64Bit, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "64bitregs", PPC::Feature64BitRegs, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "aix", PPC::AIXOS, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "aix-shared-lib-tls-model-opt", PPC::FeatureAIXSharedLibTLSModelOpt, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "aix-small-local-dynamic-tls", PPC::FeatureAIXLocalDynamicTLS, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "aix-small-local-exec-tls", PPC::FeatureAIXLocalExecTLS, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "allow-unaligned-fp-access", PPC::FeatureUnalignedFloats, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "altivec", PPC::FeatureAltivec, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "booke", PPC::FeatureBookE, { { { 0x8000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "bpermd", PPC::FeatureBPERMD, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "cmpb", PPC::FeatureCMPB, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "crbits", PPC::FeatureCRBits, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "crypto", PPC::FeatureP8Crypto, { { { 0x0ULL, 0x20000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "direct-move", PPC::FeatureDirectMove, { { { 0x0ULL, 0x200000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "e500", PPC::FeatureE500, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "efpu2", PPC::FeatureEFPU2, { { { 0x0ULL, 0x2000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "extdiv", PPC::FeatureExtDiv, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fast-MFLR", PPC::FeatureFastMFLR, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fcpsgn", PPC::FeatureFCPSGN, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "float128", PPC::FeatureFloat128, { { { 0x0ULL, 0x200000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fpcvt", PPC::FeatureFPCVT, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fprnd", PPC::FeatureFPRND, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fpu", PPC::FeatureFPU, { { { 0x4000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fre", PPC::FeatureFRE, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fres", PPC::FeatureFRES, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "frsqrte", PPC::FeatureFRSQRTE, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "frsqrtes", PPC::FeatureFRSQRTES, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fsqrt", PPC::FeatureFSqrt, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-add-logical", PPC::FeatureAddLogicalFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-addi-load", PPC::FeatureAddiLoadFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-addis-load", PPC::FeatureAddisLoadFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-arith-add", PPC::FeatureArithAddFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-back2back", PPC::FeatureBack2BackFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-cmp", PPC::FeatureCompareFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-logical", PPC::FeatureLogicalFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-logical-add", PPC::FeatureLogicalAddFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-sha3", PPC::FeatureSha3Fusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-store", PPC::FeatureStoreFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-wideimm", PPC::FeatureWideImmFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-zeromove", PPC::FeatureZeroMoveFusion, { { { 0x1000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fusion", PPC::FeatureFusion, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "hard-float", PPC::FeatureHardFloat, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "htm", PPC::FeatureHTM, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "icbt", PPC::FeatureICBT, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "invariant-function-descriptors", PPC::FeatureInvariantFunctionDescriptors, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-future-instructions", PPC::FeatureISAFuture, { { { 0x0ULL, 0x8ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-v206-instructions", PPC::FeatureISA2_06, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-v207-instructions", PPC::FeatureISA2_07, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-v30-instructions", PPC::FeatureISA3_0, { { { 0x0ULL, 0x2ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-v31-instructions", PPC::FeatureISA3_1, { { { 0x0ULL, 0x4ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isel", PPC::FeatureISEL, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "ldbrx", PPC::FeatureLDBRX, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "lfiwax", PPC::FeatureLFIWAX, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "longcall", PPC::FeatureLongCall, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "mfocrf", PPC::FeatureMFOCRF, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "mma", PPC::FeatureMMA, { { { 0x0ULL, 0x20180000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "modern-aix-as", PPC::FeatureModernAIXAs, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "msync", PPC::FeatureMSYNC, { { { 0x20000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "paired-vector-memops", PPC::FeaturePairedVectorMemops, { { { 0x0ULL, 0x4ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "partword-atomics", PPC::FeaturePartwordAtomic, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "pcrelative-memops", PPC::FeaturePCRelativeMemops, { { { 0x0ULL, 0x100000004ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "popcntd", PPC::FeaturePOPCNTD, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "power10-vector", PPC::FeatureP10Vector, { { { 0x0ULL, 0x200008ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "power8-altivec", PPC::FeatureP8Altivec, { { { 0x2000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "power8-vector", PPC::FeatureP8Vector, { { { 0x0ULL, 0x200000020000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "power9-altivec", PPC::FeatureP9Altivec, { { { 0x0ULL, 0x20004ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "power9-vector", PPC::FeatureP9Vector, { { { 0x0ULL, 0x180004ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "ppc-postra-sched", PPC::FeaturePPCPostRASched, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "ppc-prera-sched", PPC::FeaturePPCPreRASched, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "ppc4xx", PPC::FeaturePPC4xx, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "ppc6xx", PPC::FeaturePPC6xx, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "predictable-select-expensive", PPC::FeaturePredictableSelectIsExpensive, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "prefix-instrs", PPC::FeaturePrefixInstrs, { { { 0x0ULL, 0x8ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "privileged", PPC::FeaturePrivileged, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "quadword-atomics", PPC::FeatureQuadwordAtomic, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "recipprec", PPC::FeatureRecipPrec, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "rop-protect", PPC::FeatureROPProtect, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "secure-plt", PPC::FeatureSecurePlt, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "slow-popcntd", PPC::FeatureSlowPOPCNTD, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "spe", PPC::FeatureSPE, { { { 0x4000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "stfiwx", PPC::FeatureSTFIWX, { { { 0x10000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "two-const-nr", PPC::FeatureTwoConstNR, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "vectors-use-two-units", PPC::FeatureVectorsUseTwoUnits, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "vsx", PPC::FeatureVSX, { { { 0x2000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
};

// Sorted (by key) array of values for CPU subtype.
extern const llvm::BasicSubtargetSubTypeKV BasicPPCSubTypeKV[] = {
 { "440", { { { 0x80c0020000000010ULL, 0xa020ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "450", { { { 0x80c0020000000010ULL, 0xa020ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "601", { { { 0x10000000000020ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "602", { { { 0x10000000000040ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "603", { { { 0xc0000000000080ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "603e", { { { 0xc0000000000080ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "603ev", { { { 0xc0000000000080ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "604", { { { 0xc0000000000100ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "604e", { { { 0xc0000000000100ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "620", { { { 0xc0000000000200ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "7400", { { { 0xc0002000001000ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "7450", { { { 0xc0002000001000ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "750", { { { 0xc0000000000400ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "970", { { { 0x2c0002020000800ULL, 0x4000003000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "a2", { { { 0x83ee060020002000ULL, 0x250000031a1ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "e500", { { { 0x8000020000004000ULL, 0x200000a020ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "e500mc", { { { 0x8000020000008000ULL, 0x4000002020ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "e5500", { { { 0x8000020020010000ULL, 0x4000003020ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "future", { { { 0x87ef2ce43f800002ULL, 0x3d55f9fe77bfULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "g3", { { { 0xc0000000000400ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "g4", { { { 0xc0002000001000ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "g4+", { { { 0xc0002000001000ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "g5", { { { 0x2c0002020000802ULL, 0x4000003000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "generic", { { { 0x4000000000000004ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "ppc", { { { 0x4000000000000004ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "ppc32", { { { 0x4000000000000004ULL, 0x2000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "ppc64", { { { 0x2c0002020000008ULL, 0x4000003000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "ppc64le", { { { 0xa3ef2cb821800002ULL, 0x3854c10e31a3ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr10", { { { 0x87ef2ce427800002ULL, 0x3d55f9fe77afULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr11", { { { 0x87ef2ce42f800002ULL, 0x3d55f9fe77afULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr3", { { { 0xc0002020020000ULL, 0x4000001000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr4", { { { 0x2c0002020040000ULL, 0x4000003000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr5", { { { 0x3e0002020080002ULL, 0x4000003000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr5x", { { { 0x3e8002020100002ULL, 0x4000003000ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr6", { { { 0x3ea042020200002ULL, 0x5000003100ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr6x", { { { 0x3ea042020100002ULL, 0x5000003100ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr7", { { { 0x3ef04a020800002ULL, 0x3850010031a1ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr8", { { { 0xa3ef2cb821800002ULL, 0x3854c10e31a3ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
 { "pwr9", { { { 0xa3ef2ca023800002ULL, 0x7854d93e31a7ULL, 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
};

} // end namespace llvm

#endif // GET_SUBTARGETFEATURES_KV

